/*!
  Highlight.js v11.6.0 (git: bed790f3f3)
  (c) 2006-2022 undefined and other contributors
  License: BSD-3-Clause
 */var hljs=function(){"use strict";var k={exports:{}},i,ab;function l(a){return a instanceof Map?a.clear=a.delete=a.set=()=>{throw Error("map is read-only")}:a instanceof Set&&(a.add=a.clear=a.delete=()=>{throw Error("set is read-only")}),Object.freeze(a),Object.getOwnPropertyNames(a).forEach(c=>{var b=a[c];"object"!=typeof b||Object.isFrozen(b)||l(b)}),a}k.exports=l,k.exports.default=l;class F{constructor(a){void 0===a.data&&(a.data={}),this.data=a.data,this.isMatchIgnored=!1}ignoreMatch(){this.isMatchIgnored=!0}}function E(a){return a.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#x27;")}function a(b,...c){const a=Object.create(null);for(const c in b)a[c]=b[c];return c.forEach(b=>{for(const c in b)a[c]=b[c]}),a}const C=a=>!!a.scope||a.sublanguage&&a.language;class aa{constructor(a,b){this.buffer="",this.classPrefix=b.classPrefix,a.walk(this)}addText(a){this.buffer+=E(a)}openNode(a){if(!C(a))return;let b="";b=a.sublanguage?"language-"+a.language:((a,{prefix:b})=>{if(a.includes(".")){const c=a.split(".");return[`${b}${c.shift()}`,...c.map((a,b)=>`${a}${"_".repeat(b+1)}`)].join(" ")}return`${b}${a}`})(a.scope,{prefix:this.classPrefix}),this.span(b)}closeNode(a){C(a)&&(this.buffer+="</span>")}value(){return this.buffer}span(a){this.buffer+=`<span class="${a}">`}}const p=(b={})=>{const a={children:[]};return Object.assign(a,b),a};class A{constructor(){this.rootNode=p(),this.stack=[this.rootNode]}get top(){return this.stack[this.stack.length-1]}get root(){return this.rootNode}add(a){this.top.children.push(a)}openNode(b){const a=p({scope:b});this.add(a),this.stack.push(a)}closeNode(){if(this.stack.length>1)return this.stack.pop()}closeAllNodes(){for(;this.closeNode(););}toJSON(){return JSON.stringify(this.rootNode,null,4)}walk(a){return this.constructor._walk(a,this.rootNode)}static _walk(b,a){return"string"==typeof a?b.addText(a):a.children&&(b.openNode(a),a.children.forEach(a=>this._walk(b,a)),b.closeNode(a)),b}static _collapse(a){"string"!=typeof a&&a.children&&(a.children.every(a=>"string"==typeof a)?a.children=[a.children.join("")]:a.children.forEach(a=>{A._collapse(a)}))}}class $ extends A{constructor(a){super(),this.options=a}addKeyword(a,b){""!==a&&(this.openNode(b),this.addText(a),this.closeNode())}addText(a){""!==a&&this.add(a)}addSublanguage(b,c){const a=b.root;a.sublanguage=!0,a.language=c,this.add(a)}toHTML(){return new aa(this,this.options).value()}finalize(){return!0}}function e(a){return a?"string"==typeof a?a:a.source:null}function y(a){return b("(?=",a,")")}function _(a){return b("(?:",a,")*")}function Y(a){return b("(?:",a,")?")}function b(...a){return a.map(a=>e(a)).join("")}function j(...a){const b=(a=>{const b=a[a.length-1];return"object"==typeof b&&b.constructor===Object?(a.splice(a.length-1,1),b):{}})(a);return"("+(b.capture?"":"?:")+a.map(a=>e(a)).join("|")+")"}function q(a){return RegExp(a.toString()+"|").exec("").length-1}const V=/\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./;function n(b,{joinWith:c}){let a=0;return b.map(d=>{a+=1;const f=a;let b=e(d),c="";for(;b.length>0;){const d=V.exec(b);if(!d){c+=b;break}c+=b.substring(0,d.index),b=b.substring(d.index+d[0].length),"\\"===d[0][0]&&d[1]?c+="\\"+(Number(d[1])+f):(c+=d[0],"("===d[0]&&a++)}return c}).map(a=>`(${a})`).join(c)}const t="[a-zA-Z]\\w*",u="[a-zA-Z_]\\w*",v="\\b\\d+(\\.\\d+)?",w="(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)",x="\\b(0b[01]+)",f={begin:"\\\\[\\s\\S]",relevance:0},U={scope:"string",begin:"'",end:"'",illegal:"\\n",contains:[f]},T={scope:"string",begin:'"',end:'"',illegal:"\\n",contains:[f]},h=(d,e,f={})=>{const c=a({scope:"comment",begin:d,end:e,contains:[]},f);c.contains.push({scope:"doctag",begin:"[ ]*(?=(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):)",end:/(TODO|FIXME|NOTE|BUG|OPTIMIZE|HACK|XXX):/,excludeBegin:!0,relevance:0});const g=j("I","a","is","so","us","to","at","if","in","it","on",/[A-Za-z]+['](d|ve|re|ll|t|s|n)/,/[A-Za-z]+[-][a-z]+/,/[A-Za-z][a-z]{2,}/);return c.contains.push({begin:b(/[ ]+/,"(",g,/[.]?[:]?([.][ ]|[ ])/,"){3}")}),c},H=h("//","$"),S=h("/\\*","\\*/"),R=h("#","$");i=Object.freeze({__proto__:null,MATCH_NOTHING_RE:/\b\B/,IDENT_RE:t,UNDERSCORE_IDENT_RE:u,NUMBER_RE:v,C_NUMBER_RE:w,BINARY_NUMBER_RE:x,RE_STARTERS_RE:"!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~",SHEBANG:(c={})=>{const d=/^#![ ]*\//;return c.binary&&(c.begin=b(d,/.*\b/,c.binary,/\b.*/)),a({scope:"meta",begin:d,end:/$/,relevance:0,"on:begin":(a,b)=>{0!==a.index&&b.ignoreMatch()}},c)},BACKSLASH_ESCAPE:f,APOS_STRING_MODE:U,QUOTE_STRING_MODE:T,PHRASAL_WORDS_MODE:{begin:/\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/},COMMENT:h,C_LINE_COMMENT_MODE:H,C_BLOCK_COMMENT_MODE:S,HASH_COMMENT_MODE:R,NUMBER_MODE:{scope:"number",begin:v,relevance:0},C_NUMBER_MODE:{scope:"number",begin:w,relevance:0},BINARY_NUMBER_MODE:{scope:"number",begin:x,relevance:0},REGEXP_MODE:{begin:/(?=\/[^/\n]*\/)/,contains:[{scope:"regexp",begin:/\//,end:/\/[gimuy]*/,illegal:/\n/,contains:[f,{begin:/\[/,end:/\]/,relevance:0,contains:[f]}]}]},TITLE_MODE:{scope:"title",begin:t,relevance:0},UNDERSCORE_TITLE_MODE:{scope:"title",begin:u,relevance:0},METHOD_GUARD:{begin:"\\.\\s*[a-zA-Z_]\\w*",relevance:0},END_SAME_AS_BEGIN:a=>Object.assign(a,{"on:begin":(a,b)=>{b.data._beginMatch=a[1]},"on:end":(b,a)=>{a.data._beginMatch!==b[1]&&a.ignoreMatch()}})});function Q(a,b){"."===a.input[a.index-1]&&b.ignoreMatch()}function O(a,b){void 0!==a.className&&(a.scope=a.className,delete a.className)}function I(a,b){b&&a.beginKeywords&&(a.begin="\\b("+a.beginKeywords.split(" ").join("|")+")(?!\\.)(?=\\b|\\s)",a.__beforeBegin=Q,a.keywords=a.keywords||a.beginKeywords,delete a.beginKeywords,void 0===a.relevance&&(a.relevance=0))}function J(a,b){Array.isArray(a.illegal)&&(a.illegal=j(...a.illegal))}function K(a,b){if(a.match){if(a.begin||a.end)throw Error("begin & end are not supported with match");a.begin=a.match,delete a.match}}function L(a,b){void 0===a.relevance&&(a.relevance=1)}const M=(a,d)=>{if(!a.beforeMatch)return;if(a.starts)throw Error("beforeMatch cannot be used with starts");const c=Object.assign({},a);Object.keys(a).forEach(b=>{delete a[b]}),a.keywords=c.keywords,a.begin=b(c.beforeMatch,y(c.begin)),a.starts={relevance:0,contains:[Object.assign(c,{endsParent:!0})]},a.relevance=0,delete c.beforeMatch},N=["of","and","for","in","not","or","if","then","parent","list","value"];function o(a,c,d="keyword"){const b=Object.create(null);return"string"==typeof a?e(d,a.split(" ")):Array.isArray(a)?e(d,a):Object.keys(a).forEach(d=>{Object.assign(b,o(a[d],c,d))}),b;function e(d,a){c&&(a=a.map(a=>a.toLowerCase())),a.forEach(c=>{const a=c.split("|");b[a[0]]=[d,P(a[0],a[1])]})}}function P(b,a){return a?Number(a):(a=>N.includes(a.toLowerCase()))(b)?0:1}const G={},c=a=>{console.error(a)},D=(a,...b)=>{console.log("WARN: "+a,...b)},d=(a,b)=>{G[`${a}/${b}`]||(console.log(`Deprecated as of ${a}. ${b}`),G[`${a}/${b}`]=!0)},g=Error();function r(a,d,{key:b}){let c=0;const g=a[b],e={},f={};for(let a=1;a<=d.length;a++)f[a+c]=g[a],e[a+c]=!0,c+=q(d[a-1]);a[b]=f,a[b]._emit=e,a[b]._multi=!0}function W(a){(a=>{a.scope&&"object"==typeof a.scope&&null!==a.scope&&(a.beginScope=a.scope,delete a.scope)})(a),"string"==typeof a.beginScope&&(a.beginScope={_wrap:a.beginScope}),"string"==typeof a.endScope&&(a.endScope={_wrap:a.endScope}),(a=>{if(Array.isArray(a.begin)){if(a.skip||a.excludeBegin||a.returnBegin)throw c("skip, excludeBegin, returnBegin not compatible with beginScope: {}"),g;if("object"!=typeof a.beginScope||null===a.beginScope)throw c("beginScope must be object"),g;r(a,a.begin,{key:"beginScope"}),a.begin=n(a.begin,{joinWith:""})}})(a),(a=>{if(Array.isArray(a.end)){if(a.skip||a.excludeEnd||a.returnEnd)throw c("skip, excludeEnd, returnEnd not compatible with endScope: {}"),g;if("object"!=typeof a.endScope||null===a.endScope)throw c("endScope must be object"),g;r(a,a.end,{key:"endScope"}),a.end=n(a.end,{joinWith:""})}})(a)}function X(b){function c(a,c){return RegExp(e(a),"m"+(b.case_insensitive?"i":"")+(b.unicodeRegex?"u":"")+(c?"g":""))}class d{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(b,a){a.position=this.position++,this.matchIndexes[this.matchAt]=a,this.regexes.push([a,b]),this.matchAt+=q(b)+1}compile(){0===this.regexes.length&&(this.exec=()=>null);const a=this.regexes.map(a=>a[1]);this.matcherRe=c(n(a,{joinWith:"|"}),!0),this.lastIndex=0}exec(c){this.matcherRe.lastIndex=this.lastIndex;const a=this.matcherRe.exec(c);if(!a)return null;const b=a.findIndex((a,b)=>b>0&&void 0!==a),d=this.matchIndexes[b];return a.splice(0,b),Object.assign(a,d)}}class f{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(a){if(this.multiRegexes[a])return this.multiRegexes[a];const b=new d;return this.rules.slice(a).forEach(([a,c])=>b.addRule(a,c)),b.compile(),this.multiRegexes[a]=b,b}resumingScanAtSamePosition(){return 0!==this.regexIndex}considerAll(){this.regexIndex=0}addRule(b,a){this.rules.push([b,a]),"begin"===a.type&&this.count++}exec(b){const c=this.getMatcher(this.regexIndex);c.lastIndex=this.lastIndex;let a=c.exec(b);if(this.resumingScanAtSamePosition())if(a&&a.index===this.lastIndex);else{const c=this.getMatcher(0);c.lastIndex=this.lastIndex+1,a=c.exec(b)}return a&&(this.regexIndex+=a.position+1,this.regexIndex===this.count&&this.considerAll()),a}}if(b.compilerExtensions||(b.compilerExtensions=[]),b.contains&&b.contains.includes("self"))throw Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");return b.classNameAliases=a(b.classNameAliases||{}),function j(d,h){const g=d;if(d.isCompiled)return g;[O,K,W,M].forEach(a=>a(d,h)),b.compilerExtensions.forEach(a=>a(d,h)),d.__beforeBegin=null,[I,J,L].forEach(a=>a(d,h)),d.isCompiled=!0;let i=null;return"object"==typeof d.keywords&&d.keywords.$pattern&&(d.keywords=Object.assign({},d.keywords),i=d.keywords.$pattern,delete d.keywords.$pattern),i=i||/\w+/,d.keywords&&(d.keywords=o(d.keywords,b.case_insensitive)),g.keywordPatternRe=c(i,!0),h&&(d.begin||(d.begin=/\B|\b/),g.beginRe=c(g.begin),d.end||d.endsWithParent||(d.end=/\B|\b/),d.end&&(g.endRe=c(g.end)),g.terminatorEnd=e(g.end)||"",d.endsWithParent&&h.terminatorEnd&&(g.terminatorEnd+=(d.end?"|":"")+h.terminatorEnd)),d.illegal&&(g.illegalRe=c(d.illegal)),d.contains||(d.contains=[]),d.contains=[].concat(...d.contains.map(b=>(b=>(b.variants&&!b.cachedVariants&&(b.cachedVariants=b.variants.map(c=>a(b,{variants:null},c))),b.cachedVariants?b.cachedVariants:s(b)?a(b,{starts:b.starts?a(b.starts):null}):Object.isFrozen(b)?a(b):b))("self"===b?d:b))),d.contains.forEach(a=>{j(a,g)}),d.starts&&j(d.starts,h),g.matcher=(a=>{const b=new f;return a.contains.forEach(a=>b.addRule(a.begin,{rule:a,type:"begin"})),a.terminatorEnd&&b.addRule(a.terminatorEnd,{type:"end"}),a.illegal&&b.addRule(a.illegal,{type:"illegal"}),b})(g),g}(b)}function s(a){return!!a&&(a.endsWithParent||s(a.starts))}class Z extends Error{constructor(a,b){super(a),this.name="HTMLInjectionError",this.html=b}}const m=E,z=a,B=Symbol("nomatch");return ab=(e=>{const g=Object.create(null),h=Object.create(null),w=[];let l=!0;const v="Could not find the language '{}', did you forget to load/include a language module?",t={disableAutodetect:!0,name:"Plain text",contains:[]};let a={ignoreUnescapedHTML:!1,throwUnescapedHTML:!1,noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\blang(?:uage)?-([\w-]+)\b/i,classPrefix:"hljs-",cssSelector:"pre code",languages:null,__emitter:$};function s(b){return a.noHighlightRe.test(b)}function C(h,b,c){let f="",g="";"object"==typeof b?(f=h,c=b.ignoreIllegals,g=b.language):(d("10.7.0","highlight(lang, code, ...args) has been deprecated."),d("10.7.0","Please use highlight(code, options) instead.\nhttps://github.com/highlightjs/highlight.js/issues/2277"),g=h,f=b),void 0===c&&(c=!0);const a={code:f,language:g};o("before:highlight",a);const e=a.result?a.result:p(a.language,a.code,c);return e.code=a.code,o("after:highlight",e),e}function p(h,j,H,G){const u=Object.create(null);function A(){if(!b.keywords)return void e.addText(d);let f=0;b.keywordPatternRe.lastIndex=0;let a=b.keywordPatternRe.exec(d),c="";for(;a;){c+=d.substring(f,a.index);const h=i.case_insensitive?a[0].toLowerCase():a[0],j=(g=h,b.keywords[g]);if(j){const[b,d]=j;if(e.addText(c),c="",u[h]=(u[h]||0)+1,u[h]<=7&&(o+=d),b.startsWith("_"))c+=a[0];else{const c=i.classNameAliases[b]||b;e.addKeyword(a[0],c)}}else c+=a[0];f=b.keywordPatternRe.lastIndex,a=b.keywordPatternRe.exec(d)}var g;c+=d.substring(f),e.addText(c)}function n(){null!=b.subLanguage?(()=>{if(""===d)return;let a=null;if("string"==typeof b.subLanguage){if(!g[b.subLanguage])return void e.addText(d);a=p(b.subLanguage,d,!0,C[b.subLanguage]),C[b.subLanguage]=a._top}else a=q(d,b.subLanguage.length?b.subLanguage:null);b.relevance>0&&(o+=a.relevance),e.addSublanguage(a._emitter,a.language)})():A(),d=""}function D(b,c){let a=1;const f=c.length-1;for(;a<=f;){if(!b._emit[a]){a++;continue}const f=i.classNameAliases[b[a]]||b[a],g=c[a];f?e.addKeyword(g,f):(d=g,A(),d=""),a++}}function z(a,c){return a.scope&&"string"==typeof a.scope&&e.openNode(i.classNameAliases[a.scope]||a.scope),a.beginScope&&(a.beginScope._wrap?(e.addKeyword(d,i.classNameAliases[a.beginScope._wrap]||a.beginScope._wrap),d=""):a.beginScope._multi&&(D(a.beginScope,c),d="")),b=Object.create(a,{parent:{value:b}}),b}function x(a,c,d){let b=((a,c)=>{const b=a&&a.exec(c);return b&&0===b.index})(a.endRe,d);if(b){if(a["on:end"]){const d=new F(a);a["on:end"](c,d),d.isMatchIgnored&&(b=!1)}if(b){for(;a.endsParent&&a.parent;)a=a.parent;return a}}if(a.endsWithParent)return x(a.parent,c,d)}function J(a){return 0===b.matcher.regexIndex?(d+=a[0],1):(w=!0,0)}function I(a){const c=a[0],h=j.substring(a.index),g=x(b,a,h);if(!g)return B;const f=b;b.endScope&&b.endScope._wrap?(n(),e.addKeyword(c,b.endScope._wrap)):b.endScope&&b.endScope._multi?(n(),D(b.endScope,a)):f.skip?d+=c:(f.returnEnd||f.excludeEnd||(d+=c),n(),f.excludeEnd&&(d=c));do b.scope&&e.closeNode(),b.skip||b.subLanguage||(o+=b.relevance),b=b.parent;while(b!==g.parent)return g.starts&&z(g.starts,a),f.returnEnd?0:c.length}let r={};function y(e,a){const c=a&&a[0];if(d+=e,null==c)return n(),0;if("begin"===r.type&&"end"===a.type&&r.index===a.index&&""===c){if(d+=j.slice(a.index,a.index+1),!l){const a=Error(`0 width match regex (${h})`);throw a.languageName=h,a.badRule=r.rule,a}return 1}if(r=a,"begin"===a.type)return(c=>{const b=c[0],a=c.rule,e=new F(a),f=[a.__beforeBegin,a["on:begin"]];for(const a of f)if(a&&(a(c,e),e.isMatchIgnored))return J(b);return a.skip?d+=b:(a.excludeBegin&&(d+=b),n(),a.returnBegin||a.excludeBegin||(d=b)),z(a,c),a.returnBegin?0:b.length})(a);if("illegal"===a.type&&!H){const a=Error('Illegal lexeme "'+c+'" for mode "'+(b.scope||"<unnamed>")+'"');throw a.mode=b,a}if("end"===a.type){const b=I(a);if(b!==B)return b}if("illegal"===a.type&&""===c)return 1;if(t>1e5&&t>3*a.index)throw Error("potential infinite loop, way more iterations than matches");return d+=c,c.length}const i=f(h);if(!i)throw c(v.replace("{}",h)),Error('Unknown language: "'+h+'"');const E=X(i);let s="",b=G||E;const C={},e=new a.__emitter(a);(()=>{const a=[];for(let c=b;c!==i;c=c.parent)c.scope&&a.unshift(c.scope);a.forEach(a=>e.openNode(a))})();let d="",o=0,k=0,t=0,w=!1;try{for(b.matcher.considerAll();;){t++,w?w=!1:b.matcher.considerAll(),b.matcher.lastIndex=k;const a=b.matcher.exec(j);if(!a)break;const c=y(j.substring(k,a.index),a);k=a.index+c}return y(j.substring(k)),e.closeAllNodes(),e.finalize(),s=e.toHTML(),{language:h,value:s,relevance:o,illegal:!1,_emitter:e,_top:b}}catch(a){if(a.message&&a.message.includes("Illegal"))return{language:h,value:m(j),illegal:!0,relevance:0,_illegalBy:{message:a.message,index:k,context:j.slice(k-100,k+100),mode:a.mode,resultSoFar:s},_emitter:e};if(l)return{language:h,value:m(j),illegal:!1,relevance:0,errorRaised:a,_emitter:e,_top:b};throw a}}function q(c,b){b=b||a.languages||Object.keys(g);const h=(b=>{const c={value:m(b),illegal:!1,relevance:0,_top:t,_emitter:new a.__emitter(a)};return c._emitter.addText(b),c})(c),d=b.filter(f).filter(A).map(a=>p(a,c,!1));d.unshift(h);const i=d.sort((a,b)=>{if(a.relevance!==b.relevance)return b.relevance-a.relevance;if(a.language&&b.language){if(f(a.language).supersetOf===b.language)return 1;if(f(b.language).supersetOf===a.language)return-1}return 0}),[j,k]=i,e=j;return e.secondBest=k,e}function r(b){let g=null;const d=(b=>{let d=b.className+" ";d+=b.parentNode?b.parentNode.className:"";const c=a.languageDetectRe.exec(d);if(c){const a=f(c[1]);return a||(D(v.replace("{}",c[1])),D("Falling back to no-highlight mode for this block.",b)),a?c[1]:"no-highlight"}return d.split(/\s+/).find(a=>s(a)||f(a))})(b);if(s(d))return;if(o("before:highlightElement",{el:b,language:d}),b.children.length>0&&(a.ignoreUnescapedHTML||(console.warn("One of your code blocks includes unescaped HTML. This is a potentially serious security risk."),console.warn("https://github.com/highlightjs/highlight.js/wiki/security"),console.warn("The element with unescaped HTML:"),console.warn(b)),a.throwUnescapedHTML))throw new Z("One of your code blocks includes unescaped HTML.",b.innerHTML);g=b;const e=g.textContent,c=d?C(e,{language:d,ignoreIllegals:!0}):q(e);b.innerHTML=c.value,((a,b,c)=>{const d=b&&h[b]||c;a.classList.add("hljs"),a.classList.add("language-"+d)})(b,d,c.language),b.result={language:c.language,re:c.relevance,relevance:c.relevance},c.secondBest&&(b.secondBest={language:c.secondBest.language,relevance:c.secondBest.relevance}),o("after:highlightElement",{el:b,result:c,text:e})}let u=!1;function n(){"loading"!==document.readyState?document.querySelectorAll(a.cssSelector).forEach(r):u=!0}function f(a){return a=(a||"").toLowerCase(),g[a]||g[h[a]]}function x(a,{languageName:b}){"string"==typeof a&&(a=[a]),a.forEach(a=>{h[a.toLowerCase()]=b})}function A(b){const a=f(b);return a&&!a.disableAutodetect}function o(b,c){const a=b;w.forEach(b=>{b[a]&&b[a](c)})}"undefined"!=typeof window&&window.addEventListener&&window.addEventListener("DOMContentLoaded",()=>{u&&n()},!1),Object.assign(e,{highlight:C,highlightAuto:q,highlightAll:n,highlightElement:r,highlightBlock:a=>(d("10.7.0","highlightBlock will be removed entirely in v12.0"),d("10.7.0","Please use highlightElement now."),r(a)),configure:b=>{a=z(a,b)},initHighlighting:()=>{n(),d("10.6.0","initHighlighting() deprecated.  Use highlightAll() now.")},initHighlightingOnLoad:()=>{n(),d("10.6.0","initHighlightingOnLoad() deprecated.  Use highlightAll() now.")},registerLanguage:(b,d)=>{let a=null;try{a=d(e)}catch(d){if(c("Language definition for '{}' could not be registered.".replace("{}",b)),!l)throw d;c(d),a=t}a.name||(a.name=b),g[b]=a,a.rawDefinition=d.bind(null,e),a.aliases&&x(a.aliases,{languageName:b})},unregisterLanguage:a=>{delete g[a];for(const b of Object.keys(h))h[b]===a&&delete h[b]},listLanguages:()=>Object.keys(g),getLanguage:f,registerAliases:x,autoDetection:A,inherit:z,addPlugin:a=>{(a=>{a["before:highlightBlock"]&&!a["before:highlightElement"]&&(a["before:highlightElement"]=b=>{a["before:highlightBlock"](Object.assign({block:b.el},b))}),a["after:highlightBlock"]&&!a["after:highlightElement"]&&(a["after:highlightElement"]=b=>{a["after:highlightBlock"](Object.assign({block:b.el},b))})})(a),w.push(a)}}),e.debugMode=()=>{l=!1},e.safeMode=()=>{l=!0},e.versionString="11.6.0",e.regex={concat:b,lookahead:y,either:j,optional:Y,anyNumberOfTimes:_};for(const a in i)"object"==typeof i[a]&&k.exports(i[a]);return Object.assign(e,i),e})({}),ab}();"object"==typeof exports&&"undefined"!=typeof module&&(module.exports=hljs),(()=>{var a=(()=>{"use strict";return a=>{const b=["true","false","null"],c={scope:"literal",beginKeywords:b.join(" ")};return{name:"JSON",keywords:{literal:b},contains:[{className:"attr",begin:/"(\\.|[^\\"\r\n])*"(?=\s*:)/,relevance:1.01},{match:/[{}[\],:]/,className:"punctuation",relevance:0},a.QUOTE_STRING_MODE,c,a.C_NUMBER_MODE,a.C_LINE_COMMENT_MODE,a.C_BLOCK_COMMENT_MODE],illegal:"\\S"}}})();hljs.registerLanguage("json",a)})(),(()=>{var a=(()=>{"use strict";return a=>{const b={variants:[a.COMMENT("--","$"),a.COMMENT(/\{-/,/-\}/,{contains:["self"]})]},e={className:"meta",begin:/\{-#/,end:/#-\}/},f={className:"meta",begin:"^#",end:"$"},d={className:"type",begin:"\\b[A-Z][\\w']*",relevance:0},c={begin:"\\(",end:"\\)",illegal:'"',contains:[e,f,{className:"type",begin:"\\b[A-Z][\\w]*(\\((\\.\\.|,|\\w+)\\))?"},a.inherit(a.TITLE_MODE,{begin:"[_a-z][\\w']*"}),b]},g="([0-9a-fA-F]_*)+",h={className:"number",relevance:0,variants:[{match:"\\b(([0-9]_*)+)(\\.(([0-9]_*)+))?([eE][+-]?(([0-9]_*)+))?\\b"},{match:`\\b0[xX]_*(${g})(\\.(${g}))?([pP][+-]?(([0-9]_*)+))?\\b`},{match:"\\b0[oO](([0-7]_*)+)\\b"},{match:"\\b0[bB](([01]_*)+)\\b"}]};return{name:"Haskell",aliases:["hs"],keywords:"let in if then else case of where do module import hiding qualified type data newtype deriving class instance as default infix infixl infixr foreign export ccall stdcall cplusplus jvm dotnet safe unsafe family forall mdo proc rec",contains:[{beginKeywords:"module",end:"where",keywords:"module where",contains:[c,b],illegal:"\\W\\.|;"},{begin:"\\bimport\\b",end:"$",keywords:"import qualified as hiding",contains:[c,b],illegal:"\\W\\.|;"},{className:"class",begin:"^(\\s*)?(class|instance)\\b",end:"where",keywords:"class family instance where",contains:[d,c,b]},{className:"class",begin:"\\b(data|(new)?type)\\b",end:"$",keywords:"data family type newtype deriving",contains:[e,d,c,{begin:/\{/,end:/\}/,contains:c.contains},b]},{beginKeywords:"default",end:"$",contains:[d,c,b]},{beginKeywords:"infix infixl infixr",end:"$",contains:[a.C_NUMBER_MODE,b]},{begin:"\\bforeign\\b",end:"$",keywords:"foreign import export ccall stdcall cplusplus jvm dotnet safe unsafe",contains:[d,a.QUOTE_STRING_MODE,b]},{className:"meta",begin:"#!\\/usr\\/bin\\/env runhaskell",end:"$"},e,f,a.QUOTE_STRING_MODE,h,d,a.inherit(a.TITLE_MODE,{begin:"^[_a-z][\\w']*"}),b,{begin:"->|<-"}]}}})();hljs.registerLanguage("haskell",a)})(),(()=>{var a=(()=>{"use strict";return a=>{const c=a.regex,f=a.COMMENT("//","$",{contains:[{begin:/\\\n/}]}),h="[a-zA-Z_]\\w*::",n="(?!struct)(decltype\\(auto\\)|"+c.optional(h)+"[a-zA-Z_]\\w*"+c.optional("<[^<>]+>")+")",d={className:"type",begin:"\\b[a-z\\d_]*_t\\b"},e={className:"string",variants:[{begin:'(u8?|U|L)?"',end:'"',illegal:"\\n",contains:[a.BACKSLASH_ESCAPE]},{begin:"(u8?|U|L)?'(\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\S)|.)",end:"'",illegal:"."},a.END_SAME_AS_BEGIN({begin:/(?:u8?|U|L)?R"([^()\\ ]{0,16})\(/,end:/\)([^()\\ ]{0,16})"/})]},g={className:"number",variants:[{begin:"\\b(0b[01']+)"},{begin:"(-?)\\b([\\d']+(\\.[\\d']*)?|\\.[\\d']+)((ll|LL|l|L)(u|U)?|(u|U)(ll|LL|l|L)?|f|F|b|B)"},{begin:"(-?)(\\b0[xX][a-fA-F0-9']+|(\\b[\\d']+(\\.[\\d']*)?|\\.[\\d']+)([eE][-+]?[\\d']+)?)"}],relevance:0},j={className:"meta",begin:/#\s*[a-z]+\b/,end:/$/,keywords:{keyword:"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include"},contains:[{begin:/\\\n/,relevance:0},a.inherit(e,{className:"string"}),{className:"string",begin:/<.*?>/},f,a.C_BLOCK_COMMENT_MODE]},m={className:"title",begin:c.optional(h)+a.IDENT_RE,relevance:0},k=c.optional(h)+a.IDENT_RE+"\\s*\\(",b={type:["bool","char","char16_t","char32_t","char8_t","double","float","int","long","short","void","wchar_t","unsigned","signed","const","static"],keyword:["alignas","alignof","and","and_eq","asm","atomic_cancel","atomic_commit","atomic_noexcept","auto","bitand","bitor","break","case","catch","class","co_await","co_return","co_yield","compl","concept","const_cast|10","consteval","constexpr","constinit","continue","decltype","default","delete","do","dynamic_cast|10","else","enum","explicit","export","extern","false","final","for","friend","goto","if","import","inline","module","mutable","namespace","new","noexcept","not","not_eq","nullptr","operator","or","or_eq","override","private","protected","public","reflexpr","register","reinterpret_cast|10","requires","return","sizeof","static_assert","static_cast|10","struct","switch","synchronized","template","this","thread_local","throw","transaction_safe","transaction_safe_dynamic","true","try","typedef","typeid","typename","union","using","virtual","volatile","while","xor","xor_eq"],literal:["NULL","false","nullopt","nullptr","true"],built_in:["_Pragma"],_type_hints:["any","auto_ptr","barrier","binary_semaphore","bitset","complex","condition_variable","condition_variable_any","counting_semaphore","deque","false_type","future","imaginary","initializer_list","istringstream","jthread","latch","lock_guard","multimap","multiset","mutex","optional","ostringstream","packaged_task","pair","promise","priority_queue","queue","recursive_mutex","recursive_timed_mutex","scoped_lock","set","shared_future","shared_lock","shared_mutex","shared_timed_mutex","shared_ptr","stack","string_view","stringstream","timed_mutex","thread","true_type","tuple","unique_lock","unique_ptr","unordered_map","unordered_multimap","unordered_multiset","unordered_set","variant","vector","weak_ptr","wstring","wstring_view"]},l={className:"function.dispatch",relevance:0,keywords:{_hint:["abort","abs","acos","apply","as_const","asin","atan","atan2","calloc","ceil","cerr","cin","clog","cos","cosh","cout","declval","endl","exchange","exit","exp","fabs","floor","fmod","forward","fprintf","fputs","free","frexp","fscanf","future","invoke","isalnum","isalpha","iscntrl","isdigit","isgraph","islower","isprint","ispunct","isspace","isupper","isxdigit","labs","launder","ldexp","log","log10","make_pair","make_shared","make_shared_for_overwrite","make_tuple","make_unique","malloc","memchr","memcmp","memcpy","memset","modf","move","pow","printf","putchar","puts","realloc","scanf","sin","sinh","snprintf","sprintf","sqrt","sscanf","std","stderr","stdin","stdout","strcat","strchr","strcmp","strcpy","strcspn","strlen","strncat","strncmp","strncpy","strpbrk","strrchr","strspn","strstr","swap","tan","tanh","terminate","to_underlying","tolower","toupper","vfprintf","visit","vprintf","vsprintf"]},begin:c.concat(/\b/,/(?!decltype)/,/(?!if)/,/(?!for)/,/(?!switch)/,/(?!while)/,a.IDENT_RE,c.lookahead(/(<[^<>]+>|)\s*\(/))},i=[l,j,d,f,a.C_BLOCK_COMMENT_MODE,g,e],o={variants:[{begin:/=/,end:/;/},{begin:/\(/,end:/\)/},{beginKeywords:"new throw return else",end:/;/}],keywords:b,contains:i.concat([{begin:/\(/,end:/\)/,keywords:b,contains:i.concat(["self"]),relevance:0}]),relevance:0},p={className:"function",begin:"("+n+"[\\*&\\s]+)+"+k,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:b,illegal:/[^\w\s\*&:<>.]/,contains:[{begin:"decltype\\(auto\\)",keywords:b,relevance:0},{begin:k,returnBegin:!0,contains:[m],relevance:0},{begin:/::/,relevance:0},{begin:/:/,endsWithParent:!0,contains:[e,g]},{relevance:0,match:/,/},{className:"params",begin:/\(/,end:/\)/,keywords:b,relevance:0,contains:[f,a.C_BLOCK_COMMENT_MODE,e,g,d,{begin:/\(/,end:/\)/,keywords:b,relevance:0,contains:["self",f,a.C_BLOCK_COMMENT_MODE,e,g,d]}]},d,f,a.C_BLOCK_COMMENT_MODE,j]};return{name:"C++",aliases:["cc","c++","h++","hpp","hh","hxx","cxx"],keywords:b,illegal:"</",classNameAliases:{"function.dispatch":"built_in"},contains:[].concat(o,p,l,i,[j,{begin:"\\b(deque|list|queue|priority_queue|pair|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array|tuple|optional|variant|function)\\s*<(?!<)",end:">",keywords:b,contains:["self",d]},{begin:a.IDENT_RE+"::",keywords:b},{match:[/\b(?:enum(?:\s+(?:class|struct))?|class|struct|union)/,/\s+/,/\w+/],className:{1:"keyword",3:"title.class"}}])}}})();hljs.registerLanguage("cpp",a)})(),(()=>{var a=(()=>{"use strict";return b=>{const a=b.regex,c=a.concat(/[\p{L}_]/u,a.optional(/[\p{L}0-9_.-]*:/u),/[\p{L}0-9_.-]*/u),d={className:"symbol",begin:/&[a-z]+;|&#[0-9]+;|&#x[a-f0-9]+;/},e={begin:/\s/,contains:[{className:"keyword",begin:/#?[a-z_][a-z1-9_-]+/,illegal:/\n/}]},h=b.inherit(e,{begin:/\(/,end:/\)/}),i=b.inherit(b.APOS_STRING_MODE,{className:"string"}),f=b.inherit(b.QUOTE_STRING_MODE,{className:"string"}),g={endsWithParent:!0,illegal:/</,relevance:0,contains:[{className:"attr",begin:/[\p{L}0-9._:-]+/u,relevance:0},{begin:/=\s*/,relevance:0,contains:[{className:"string",endsParent:!0,variants:[{begin:/"/,end:/"/,contains:[d]},{begin:/'/,end:/'/,contains:[d]},{begin:/[^\s"'=<>`]+/}]}]}]};return{name:"HTML, XML",aliases:["html","xhtml","rss","atom","xjb","xsd","xsl","plist","wsf","svg"],case_insensitive:!0,unicodeRegex:!0,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,relevance:10,contains:[e,f,i,h,{begin:/\[/,end:/\]/,contains:[{className:"meta",begin:/<![a-z]/,end:/>/,contains:[e,h,f,i]}]}]},b.COMMENT(/<!--/,/-->/,{relevance:10}),{begin:/<!\[CDATA\[/,end:/\]\]>/,relevance:10},d,{className:"meta",end:/\?>/,variants:[{begin:/<\?xml/,relevance:10,contains:[f]},{begin:/<\?[a-z][a-z0-9]+/}]},{className:"tag",begin:/<style(?=\s|>)/,end:/>/,keywords:{name:"style"},contains:[g],starts:{end:/<\/style>/,returnEnd:!0,subLanguage:["css","xml"]}},{className:"tag",begin:/<script(?=\s|>)/,end:/>/,keywords:{name:"script"},contains:[g],starts:{end:/<\/script>/,returnEnd:!0,subLanguage:["javascript","handlebars","xml"]}},{className:"tag",begin:/<>|<\/>/},{className:"tag",begin:a.concat(/</,a.lookahead(a.concat(c,a.either(/\/>/,/>/,/\s/)))),end:/\/?>/,contains:[{className:"name",begin:c,relevance:0,starts:g}]},{className:"tag",begin:a.concat(/<\//,a.lookahead(a.concat(c,/>/))),contains:[{className:"name",begin:c,relevance:0},{begin:/>/,relevance:0,endsParent:!0}]}]}}})();hljs.registerLanguage("xml",a)})(),(()=>{var a=(()=>{"use strict";return d=>{const h={begin:/<\/?[A-Za-z_]/,end:">",subLanguage:"xml",relevance:0},e={variants:[{begin:/\[.+?\]\[.*?\]/,relevance:0},{begin:/\[.+?\]\(((data|javascript|mailto):|(?:http|ftp)s?:\/\/).*?\)/,relevance:2},{begin:d.regex.concat(/\[.+?\]\(/,/[A-Za-z][A-Za-z0-9+.-]*/,/:\/\/.*?\)/),relevance:2},{begin:/\[.+?\]\([./?&#].*?\)/,relevance:1},{begin:/\[.*?\]\(.*?\)/,relevance:0}],returnBegin:!0,contains:[{match:/\[(?=\])/},{className:"string",relevance:0,begin:"\\[",end:"\\]",excludeBegin:!0,returnEnd:!0},{className:"link",relevance:0,begin:"\\]\\(",end:"\\)",excludeBegin:!0,excludeEnd:!0},{className:"symbol",relevance:0,begin:"\\]\\[",end:"\\]",excludeBegin:!0,excludeEnd:!0}]},b={className:"strong",contains:[],variants:[{begin:/_{2}/,end:/_{2}/},{begin:/\*{2}/,end:/\*{2}/}]},c={className:"emphasis",contains:[],variants:[{begin:/\*(?!\*)/,end:/\*/},{begin:/_(?!_)/,end:/_/,relevance:0}]},f=d.inherit(b,{contains:[]}),g=d.inherit(c,{contains:[]});b.contains.push(g),c.contains.push(f);let a=[h,e];return[b,c,f,g].forEach(b=>{b.contains=b.contains.concat(a)}),a=a.concat(b,c),{name:"Markdown",aliases:["md","mkdown","mkd"],contains:[{className:"section",variants:[{begin:"^#{1,6}",end:"$",contains:a},{begin:"(?=^.+?\\n[=-]{2,}$)",contains:[{begin:"^[=-]*$"},{begin:"^",end:"\\n",contains:a}]}]},h,{className:"bullet",begin:"^[ 	]*([*+-]|(\\d+\\.))(?=\\s+)",end:"\\s+",excludeEnd:!0},b,c,{className:"quote",begin:"^>\\s+",contains:a,end:"$"},{className:"code",variants:[{begin:"(`{3,})[^`](.|\\n)*?\\1`*[ ]*"},{begin:"(~{3,})[^~](.|\\n)*?\\1~*[ ]*"},{begin:"```",end:"```+[ ]*$"},{begin:"~~~",end:"~~~+[ ]*$"},{begin:"`.+?`"},{begin:"(?=^( {4}|\\t))",contains:[{begin:"^( {4}|\\t)",end:"(\\n)$"}],relevance:0}]},{begin:"^[-\\*]{3,}",end:"$"},e,{begin:/^\[[^\n]+\]:/,returnBegin:!0,contains:[{className:"symbol",begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0},{className:"link",begin:/:\s*/,end:/$/,excludeBegin:!0}]}]}}})();hljs.registerLanguage("markdown",a)})(),(()=>{var a=(()=>{"use strict";return a=>{const e=a.regex,c={className:"subst",variants:[{begin:"\\$[A-Za-z0-9_]+"},{begin:/\$\{/,end:/\}/}]},f={className:"string",variants:[{begin:'"""',end:'"""'},{begin:'"',end:'"',illegal:"\\n",contains:[a.BACKSLASH_ESCAPE]},{begin:'[a-z]+"',end:'"',illegal:"\\n",contains:[a.BACKSLASH_ESCAPE,c]},{className:"string",begin:'[a-z]+"""',end:'"""',contains:[c],relevance:10}]},b={className:"type",begin:"\\b[A-Z][A-Za-z0-9_]*",relevance:0},d={className:"title",begin:/[^0-9\n\t "'(),.`{}\[\]:;][^\n\t "'(),.`{}\[\]:;]+|[^0-9\n\t "'(),.`{}\[\]:;=]/,relevance:0},g={className:"class",beginKeywords:"class object trait type",end:/[:={\[\n;]/,excludeEnd:!0,contains:[a.C_LINE_COMMENT_MODE,a.C_BLOCK_COMMENT_MODE,{beginKeywords:"extends with",relevance:10},{begin:/\[/,end:/\]/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[b]},{className:"params",begin:/\(/,end:/\)/,excludeBegin:!0,excludeEnd:!0,relevance:0,contains:[b]},d]},h={className:"function",beginKeywords:"def",end:e.lookahead(/[:={\[(\n;]/),contains:[d]};return{name:"Scala",keywords:{literal:"true false null",keyword:"type yield lazy override def with val var sealed abstract private trait object if then forSome for while do throw finally protected extends import final return else break new catch super class case package default try this match continue throws implicit export enum given transparent"},contains:[a.C_LINE_COMMENT_MODE,a.C_BLOCK_COMMENT_MODE,f,b,h,g,a.C_NUMBER_MODE,{begin:[/^\s*/,"extension",/\s+(?=[[(])/],beginScope:{2:"keyword"}},{begin:[/^\s*/,/end/,/\s+/,/(extension\b)?/],beginScope:{2:"keyword",4:"keyword"}},{match:/\.inline\b/},{begin:/\binline(?=\s)/,keywords:"inline"},{begin:[/\(\s*/,/using/,/\s+(?!\))/],beginScope:{2:"keyword"}},{className:"meta",begin:"@[A-Za-z]+"}]}}})();hljs.registerLanguage("scala",a)})(),(()=>{var a=(()=>{"use strict";return a=>{const b=a.regex,i=a.COMMENT("--","$"),d=["true","false","unknown"],e=["bigint","binary","blob","boolean","char","character","clob","date","dec","decfloat","decimal","float","int","integer","interval","nchar","nclob","national","numeric","real","row","smallint","time","timestamp","varchar","varying","varbinary"],f=["abs","acos","array_agg","asin","atan","avg","cast","ceil","ceiling","coalesce","corr","cos","cosh","count","covar_pop","covar_samp","cume_dist","dense_rank","deref","element","exp","extract","first_value","floor","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","last_value","lead","listagg","ln","log","log10","lower","max","min","mod","nth_value","ntile","nullif","percent_rank","percentile_cont","percentile_disc","position","position_regex","power","rank","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","row_number","sin","sinh","sqrt","stddev_pop","stddev_samp","substring","substring_regex","sum","tan","tanh","translate","translate_regex","treat","trim","trim_array","unnest","upper","value_of","var_pop","var_samp","width_bucket"],g=["create table","insert into","primary key","foreign key","not null","alter table","add constraint","grouping sets","on overflow","character set","respect nulls","ignore nulls","nulls first","nulls last","depth first","breadth first"],h=f,c=["abs","acos","all","allocate","alter","and","any","are","array","array_agg","array_max_cardinality","as","asensitive","asin","asymmetric","at","atan","atomic","authorization","avg","begin","begin_frame","begin_partition","between","bigint","binary","blob","boolean","both","by","call","called","cardinality","cascaded","case","cast","ceil","ceiling","char","char_length","character","character_length","check","classifier","clob","close","coalesce","collate","collect","column","commit","condition","connect","constraint","contains","convert","copy","corr","corresponding","cos","cosh","count","covar_pop","covar_samp","create","cross","cube","cume_dist","current","current_catalog","current_date","current_default_transform_group","current_path","current_role","current_row","current_schema","current_time","current_timestamp","current_path","current_role","current_transform_group_for_type","current_user","cursor","cycle","date","day","deallocate","dec","decimal","decfloat","declare","default","define","delete","dense_rank","deref","describe","deterministic","disconnect","distinct","double","drop","dynamic","each","element","else","empty","end","end_frame","end_partition","end-exec","equals","escape","every","except","exec","execute","exists","exp","external","extract","false","fetch","filter","first_value","float","floor","for","foreign","frame_row","free","from","full","function","fusion","get","global","grant","group","grouping","groups","having","hold","hour","identity","in","indicator","initial","inner","inout","insensitive","insert","int","integer","intersect","intersection","interval","into","is","join","json_array","json_arrayagg","json_exists","json_object","json_objectagg","json_query","json_table","json_table_primitive","json_value","lag","language","large","last_value","lateral","lead","leading","left","like","like_regex","listagg","ln","local","localtime","localtimestamp","log","log10","lower","match","match_number","match_recognize","matches","max","member","merge","method","min","minute","mod","modifies","module","month","multiset","national","natural","nchar","nclob","new","no","none","normalize","not","nth_value","ntile","null","nullif","numeric","octet_length","occurrences_regex","of","offset","old","omit","on","one","only","open","or","order","out","outer","over","overlaps","overlay","parameter","partition","pattern","per","percent","percent_rank","percentile_cont","percentile_disc","period","portion","position","position_regex","power","precedes","precision","prepare","primary","procedure","ptf","range","rank","reads","real","recursive","ref","references","referencing","regr_avgx","regr_avgy","regr_count","regr_intercept","regr_r2","regr_slope","regr_sxx","regr_sxy","regr_syy","release","result","return","returns","revoke","right","rollback","rollup","row","row_number","rows","running","savepoint","scope","scroll","search","second","seek","select","sensitive","session_user","set","show","similar","sin","sinh","skip","smallint","some","specific","specifictype","sql","sqlexception","sqlstate","sqlwarning","sqrt","start","static","stddev_pop","stddev_samp","submultiset","subset","substring","substring_regex","succeeds","sum","symmetric","system","system_time","system_user","table","tablesample","tan","tanh","then","time","timestamp","timezone_hour","timezone_minute","to","trailing","translate","translate_regex","translation","treat","trigger","trim","trim_array","true","truncate","uescape","union","unique","unknown","unnest","update","upper","user","using","value","values","value_of","var_pop","var_samp","varbinary","varchar","varying","versioning","when","whenever","where","width_bucket","window","with","within","without","year","add","asc","collation","desc","final","first","last","view"].filter(a=>!f.includes(a)),j={begin:b.concat(/\b/,b.either(...h),/\s*\(/),relevance:0,keywords:{built_in:h}};return{name:"SQL",case_insensitive:!0,illegal:/[{}]|<\//,keywords:{$pattern:/\b[\w\.]+/,keyword:((b,{exceptions:a,when:c}={})=>{const d=c;return a=a||[],b.map(b=>b.match(/\|\d+$/)||a.includes(b)?b:d(b)?b+"|0":b)})(c,{when:a=>a.length<3}),literal:d,type:e,built_in:["current_catalog","current_date","current_default_transform_group","current_path","current_role","current_schema","current_transform_group_for_type","current_user","session_user","system_time","system_user","current_time","localtime","current_timestamp","localtimestamp"]},contains:[{begin:b.either(...g),relevance:0,keywords:{$pattern:/[\w\.]+/,keyword:c.concat(g),literal:d,type:e}},{className:"type",begin:b.either("double precision","large object","with timezone","without timezone")},j,{className:"variable",begin:/@[a-z0-9]+/},{className:"string",variants:[{begin:/'/,end:/'/,contains:[{begin:/''/}]}]},{begin:/"/,end:/"/,contains:[{begin:/""/}]},a.C_NUMBER_MODE,a.C_BLOCK_COMMENT_MODE,i,{className:"operator",begin:/[-+*/=%^~]|&&?|\|\|?|!=?|<(?:=>?|<|>)?|>[>=]?/,relevance:0}]}}})();hljs.registerLanguage("sql",a)})(),(()=>{var a=(()=>{"use strict";const a=["a","abbr","address","article","aside","audio","b","blockquote","body","button","canvas","caption","cite","code","dd","del","details","dfn","div","dl","dt","em","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","html","i","iframe","img","input","ins","kbd","label","legend","li","main","mark","menu","nav","object","ol","p","q","quote","samp","section","span","strong","summary","sup","table","tbody","td","textarea","tfoot","th","thead","time","tr","ul","var","video"],b=["any-hover","any-pointer","aspect-ratio","color","color-gamut","color-index","device-aspect-ratio","device-height","device-width","display-mode","forced-colors","grid","height","hover","inverted-colors","monochrome","orientation","overflow-block","overflow-inline","pointer","prefers-color-scheme","prefers-contrast","prefers-reduced-motion","prefers-reduced-transparency","resolution","scan","scripting","update","width","min-width","max-width","min-height","max-height"],c=["active","any-link","blank","checked","current","default","defined","dir","disabled","drop","empty","enabled","first","first-child","first-of-type","fullscreen","future","focus","focus-visible","focus-within","has","host","host-context","hover","indeterminate","in-range","invalid","is","lang","last-child","last-of-type","left","link","local-link","not","nth-child","nth-col","nth-last-child","nth-last-col","nth-last-of-type","nth-of-type","only-child","only-of-type","optional","out-of-range","past","placeholder-shown","read-only","read-write","required","right","root","scope","target","target-within","user-invalid","valid","visited","where"],d=["after","backdrop","before","cue","cue-region","first-letter","first-line","grammar-error","marker","part","placeholder","selection","slotted","spelling-error"],e=["align-content","align-items","align-self","all","animation","animation-delay","animation-direction","animation-duration","animation-fill-mode","animation-iteration-count","animation-name","animation-play-state","animation-timing-function","backface-visibility","background","background-attachment","background-blend-mode","background-clip","background-color","background-image","background-origin","background-position","background-repeat","background-size","block-size","border","border-block","border-block-color","border-block-end","border-block-end-color","border-block-end-style","border-block-end-width","border-block-start","border-block-start-color","border-block-start-style","border-block-start-width","border-block-style","border-block-width","border-bottom","border-bottom-color","border-bottom-left-radius","border-bottom-right-radius","border-bottom-style","border-bottom-width","border-collapse","border-color","border-image","border-image-outset","border-image-repeat","border-image-slice","border-image-source","border-image-width","border-inline","border-inline-color","border-inline-end","border-inline-end-color","border-inline-end-style","border-inline-end-width","border-inline-start","border-inline-start-color","border-inline-start-style","border-inline-start-width","border-inline-style","border-inline-width","border-left","border-left-color","border-left-style","border-left-width","border-radius","border-right","border-right-color","border-right-style","border-right-width","border-spacing","border-style","border-top","border-top-color","border-top-left-radius","border-top-right-radius","border-top-style","border-top-width","border-width","bottom","box-decoration-break","box-shadow","box-sizing","break-after","break-before","break-inside","caption-side","caret-color","clear","clip","clip-path","clip-rule","color","column-count","column-fill","column-gap","column-rule","column-rule-color","column-rule-style","column-rule-width","column-span","column-width","columns","contain","content","content-visibility","counter-increment","counter-reset","cue","cue-after","cue-before","cursor","direction","display","empty-cells","filter","flex","flex-basis","flex-direction","flex-flow","flex-grow","flex-shrink","flex-wrap","float","flow","font","font-display","font-family","font-feature-settings","font-kerning","font-language-override","font-size","font-size-adjust","font-smoothing","font-stretch","font-style","font-synthesis","font-variant","font-variant-caps","font-variant-east-asian","font-variant-ligatures","font-variant-numeric","font-variant-position","font-variation-settings","font-weight","gap","glyph-orientation-vertical","grid","grid-area","grid-auto-columns","grid-auto-flow","grid-auto-rows","grid-column","grid-column-end","grid-column-start","grid-gap","grid-row","grid-row-end","grid-row-start","grid-template","grid-template-areas","grid-template-columns","grid-template-rows","hanging-punctuation","height","hyphens","icon","image-orientation","image-rendering","image-resolution","ime-mode","inline-size","isolation","justify-content","left","letter-spacing","line-break","line-height","list-style","list-style-image","list-style-position","list-style-type","margin","margin-block","margin-block-end","margin-block-start","margin-bottom","margin-inline","margin-inline-end","margin-inline-start","margin-left","margin-right","margin-top","marks","mask","mask-border","mask-border-mode","mask-border-outset","mask-border-repeat","mask-border-slice","mask-border-source","mask-border-width","mask-clip","mask-composite","mask-image","mask-mode","mask-origin","mask-position","mask-repeat","mask-size","mask-type","max-block-size","max-height","max-inline-size","max-width","min-block-size","min-height","min-inline-size","min-width","mix-blend-mode","nav-down","nav-index","nav-left","nav-right","nav-up","none","normal","object-fit","object-position","opacity","order","orphans","outline","outline-color","outline-offset","outline-style","outline-width","overflow","overflow-wrap","overflow-x","overflow-y","padding","padding-block","padding-block-end","padding-block-start","padding-bottom","padding-inline","padding-inline-end","padding-inline-start","padding-left","padding-right","padding-top","page-break-after","page-break-before","page-break-inside","pause","pause-after","pause-before","perspective","perspective-origin","pointer-events","position","quotes","resize","rest","rest-after","rest-before","right","row-gap","scroll-margin","scroll-margin-block","scroll-margin-block-end","scroll-margin-block-start","scroll-margin-bottom","scroll-margin-inline","scroll-margin-inline-end","scroll-margin-inline-start","scroll-margin-left","scroll-margin-right","scroll-margin-top","scroll-padding","scroll-padding-block","scroll-padding-block-end","scroll-padding-block-start","scroll-padding-bottom","scroll-padding-inline","scroll-padding-inline-end","scroll-padding-inline-start","scroll-padding-left","scroll-padding-right","scroll-padding-top","scroll-snap-align","scroll-snap-stop","scroll-snap-type","scrollbar-color","scrollbar-gutter","scrollbar-width","shape-image-threshold","shape-margin","shape-outside","speak","speak-as","src","tab-size","table-layout","text-align","text-align-all","text-align-last","text-combine-upright","text-decoration","text-decoration-color","text-decoration-line","text-decoration-style","text-emphasis","text-emphasis-color","text-emphasis-position","text-emphasis-style","text-indent","text-justify","text-orientation","text-overflow","text-rendering","text-shadow","text-transform","text-underline-position","top","transform","transform-box","transform-origin","transform-style","transition","transition-delay","transition-duration","transition-property","transition-timing-function","unicode-bidi","vertical-align","visibility","voice-balance","voice-duration","voice-family","voice-pitch","voice-range","voice-rate","voice-stress","voice-volume","white-space","widows","width","will-change","word-break","word-spacing","word-wrap","writing-mode","z-index"].reverse();return g=>{const i=g.regex,f=(a=>({IMPORTANT:{scope:"meta",begin:"!important"},BLOCK_COMMENT:a.C_BLOCK_COMMENT_MODE,HEXCOLOR:{scope:"number",begin:/#(([0-9a-fA-F]{3,4})|(([0-9a-fA-F]{2}){3,4}))\b/},FUNCTION_DISPATCH:{className:"built_in",begin:/[\w-]+(?=\()/},ATTRIBUTE_SELECTOR_MODE:{scope:"selector-attr",begin:/\[/,end:/\]/,illegal:"$",contains:[a.APOS_STRING_MODE,a.QUOTE_STRING_MODE]},CSS_NUMBER_MODE:{scope:"number",begin:a.NUMBER_RE+"(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",relevance:0},CSS_VARIABLE:{className:"attr",begin:/--[A-Za-z][A-Za-z0-9_-]*/}}))(g),h=[g.APOS_STRING_MODE,g.QUOTE_STRING_MODE];return{name:"CSS",case_insensitive:!0,illegal:/[=|'\$]/,keywords:{keyframePosition:"from to"},classNameAliases:{keyframePosition:"selector-tag"},contains:[f.BLOCK_COMMENT,{begin:/-(webkit|moz|ms|o)-(?=[a-z])/},f.CSS_NUMBER_MODE,{className:"selector-id",begin:/#[A-Za-z0-9_-]+/,relevance:0},{className:"selector-class",begin:"\\.[a-zA-Z-][a-zA-Z0-9_-]*",relevance:0},f.ATTRIBUTE_SELECTOR_MODE,{className:"selector-pseudo",variants:[{begin:":("+c.join("|")+")"},{begin:":(:)?("+d.join("|")+")"}]},f.CSS_VARIABLE,{className:"attribute",begin:"\\b("+e.join("|")+")\\b"},{begin:/:/,end:/[;}{]/,contains:[f.BLOCK_COMMENT,f.HEXCOLOR,f.IMPORTANT,f.CSS_NUMBER_MODE,...h,{begin:/(url|data-uri)\(/,end:/\)/,relevance:0,keywords:{built_in:"url data-uri"},contains:[...h,{className:"string",begin:/[^)]/,endsWithParent:!0,excludeEnd:!0}]},f.FUNCTION_DISPATCH]},{begin:i.lookahead(/@/),end:"[{;]",relevance:0,illegal:/:/,contains:[{className:"keyword",begin:/@-?\w[\w]*(-\w+)*/},{begin:/\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:{$pattern:/[a-z-]+/,keyword:"and or not only",attribute:b.join(" ")},contains:[{begin:/[a-z-]+(?=:)/,className:"attribute"},...h,f.CSS_NUMBER_MODE]}]},{className:"selector-tag",begin:"\\b("+a.join("|")+")\\b"}]}}})();hljs.registerLanguage("css",a)})(),(()=>{var a=(()=>{"use strict";return a=>{const e=a.regex,b={},f={begin:/\$\{/,end:/\}/,contains:["self",{begin:/:-/,contains:[b]}]};Object.assign(b,{className:"variable",variants:[{begin:e.concat(/\$[\w\d#@][\w\d_]*/,"(?![\\w\\d])(?![$])")},f]});const c={className:"subst",begin:/\$\(/,end:/\)/,contains:[a.BACKSLASH_ESCAPE]},g={begin:/<<-?\s*(?=\w+)/,starts:{contains:[a.END_SAME_AS_BEGIN({begin:/(\w+)/,end:/(\w+)/,className:"string"})]}},d={className:"string",begin:/"/,end:/"/,contains:[a.BACKSLASH_ESCAPE,b,c]};c.contains.push(d);const h={begin:/\$\(\(/,end:/\)\)/,contains:[{begin:/\d+#[0-9a-f]+/,className:"number"},a.NUMBER_MODE,b]},i=a.SHEBANG({binary:"(fish|bash|zsh|sh|csh|ksh|tcsh|dash|scsh)",relevance:10}),j={className:"function",begin:/\w[\w\d_]*\s*\(\s*\)\s*\{/,returnBegin:!0,contains:[a.inherit(a.TITLE_MODE,{begin:/\w[\w\d_]*/})],relevance:0};return{name:"Bash",aliases:["sh"],keywords:{$pattern:/\b[a-z][a-z0-9._-]+\b/,keyword:["if","then","else","elif","fi","for","while","in","do","done","case","esac","function"],literal:["true","false"],built_in:["break","cd","continue","eval","exec","exit","export","getopts","hash","pwd","readonly","return","shift","test","times","trap","umask","unset","alias","bind","builtin","caller","command","declare","echo","enable","help","let","local","logout","mapfile","printf","read","readarray","source","type","typeset","ulimit","unalias","set","shopt","autoload","bg","bindkey","bye","cap","chdir","clone","comparguments","compcall","compctl","compdescribe","compfiles","compgroups","compquote","comptags","comptry","compvalues","dirs","disable","disown","echotc","echoti","emulate","fc","fg","float","functions","getcap","getln","history","integer","jobs","kill","limit","log","noglob","popd","print","pushd","pushln","rehash","sched","setcap","setopt","stat","suspend","ttyctl","unfunction","unhash","unlimit","unsetopt","vared","wait","whence","where","which","zcompile","zformat","zftp","zle","zmodload","zparseopts","zprof","zpty","zregexparse","zsocket","zstyle","ztcp","chcon","chgrp","chown","chmod","cp","dd","df","dir","dircolors","ln","ls","mkdir","mkfifo","mknod","mktemp","mv","realpath","rm","rmdir","shred","sync","touch","truncate","vdir","b2sum","base32","base64","cat","cksum","comm","csplit","cut","expand","fmt","fold","head","join","md5sum","nl","numfmt","od","paste","ptx","pr","sha1sum","sha224sum","sha256sum","sha384sum","sha512sum","shuf","sort","split","sum","tac","tail","tr","tsort","unexpand","uniq","wc","arch","basename","chroot","date","dirname","du","echo","env","expr","factor","groups","hostid","id","link","logname","nice","nohup","nproc","pathchk","pinky","printenv","printf","pwd","readlink","runcon","seq","sleep","stat","stdbuf","stty","tee","test","timeout","tty","uname","unlink","uptime","users","who","whoami","yes"]},contains:[i,a.SHEBANG(),j,h,a.HASH_COMMENT_MODE,g,{match:/(\/[a-z._-]+)+/},d,{className:"",begin:/\\"/},{className:"string",begin:/'/,end:/'/},b]}}})();hljs.registerLanguage("bash",a)})()